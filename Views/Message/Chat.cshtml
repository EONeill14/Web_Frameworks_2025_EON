@model Web_Frameworks_2025_EON.Models.ViewModels.ChatViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = $"Chat with {Model.ReceiverEmail}";
    var currentUserId = UserManager.GetUserId(User);
}

<h1>@ViewData["Title"]</h1>

<div class="card">
    <div class="card-body" id="messagesList" style="max-height: 400px; overflow-y: auto; display: flex; flex-direction: column-reverse;">
        <div class="w-100">
            @foreach (var message in Model.Messages.OrderByDescending(m => m.Timestamp))
            {
                <div class="mb-2 @(message.SenderId == currentUserId ? "text-end" : "")">
                    <small class="text-muted">@message.Timestamp.ToShortTimeString()</small>
                    <div>
                        <div class="d-inline-block p-2 rounded @(message.SenderId == currentUserId ? "bg-primary text-white" : "bg-light")">
                            @message.Content
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="card-footer">
        <div class="input-group">
            <input type="text" id="messageInput" class="form-control" placeholder="Type a message..." />
            <button type="button" id="sendButton" class="btn btn-primary">Send</button>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to Inbox</a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
            const receiverId = "@Model.ReceiverId";
            const currentUserId = "@currentUserId";
            const messagesList = $("#messagesList div.w-100");

            connection.on("ReceiveMessage", function (senderId, messageContent) {
                const isCurrentUser = senderId === currentUserId;
                const messageClass = isCurrentUser ? "text-end" : "";
                const bubbleClass = isCurrentUser ? "bg-primary text-white" : "bg-light";

                const messageHtml = `
                    <div class="mb-2 ${messageClass}">
                        <small class="text-muted">${new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</small>
                        <div>
                            <div class="d-inline-block p-2 rounded ${bubbleClass}">
                                ${messageContent.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")}
                            </div>
                        </div>
                    </div>`;

                messagesList.prepend(messageHtml);
            });

            connection.start().catch(err => console.error(err.toString()));

            function sendMessage() {
                const message = $("#messageInput").val();
                if (message) {
                    connection.invoke("SendMessage", receiverId, message).catch(err => console.error(err.toString()));
                    $("#messageInput").val("").focus();
                }
            }

            $("#sendButton").click(sendMessage);
            $("#messageInput").keypress(function (e) {
                if (e.which === 13) { 
                    sendMessage();
                    e.preventDefault();
                }
            });
        });
    </script>
}