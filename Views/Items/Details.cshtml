@model Web_Frameworks_2025_EON.Models.Item
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = Model.Name;
    var currentUserId = UserManager.GetUserId(User);
}

@if (TempData["RequestResult"] != null)
{
    <div class="alert alert-info mt-3" role="alert">
        @TempData["RequestResult"]
    </div>
}

<div>
    <h1>@Model.Name</h1>
    <p class="text-muted">
        A @(Model.Category?.Name) @(Model.ListingType?.ToLower())
        @if (Model.ListingType == "Good")
        {
            <span> by @Model.Brand</span>
        }
    </p>
</div>
<hr />

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                Details
            </div>
            <div class="card-body">
                <h5 class="card-title">Description</h5>
                <p class="card-text">@Model.Description</p>

                @if (Model.ListingType == "Good")
                {
                    <hr>
                    <p class="card-text"><strong>Condition:</strong> @Model.Condition</p>
                }
                <hr>
                <p class="card-text"><strong>Quantity Available:</strong> @Model.Quantity</p>
            </div>
            <div class="card-footer text-muted">
                Posted on: @Model.DatePosted.ToShortDateString()
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                Actions
            </div>
            <div class="card-body">
                @if (Model.Quantity > 0)
                {
                    @if (User.Identity.IsAuthenticated && currentUserId != Model.OwnerId)
                    {
                        <form asp-controller="Items" asp-action="MakeRequest" method="post" class="d-grid gap-2">
                            <input type="hidden" name="itemId" value="@Model.Id" />
                            <button type="submit" class="btn btn-success">Request This Item</button>
                        </form>
                        <button type="button" class="btn btn-primary w-100 mt-2" data-bs-toggle="modal" data-bs-target="#chatModal"
                                data-receiver-id="@Model.Owner.Id" data-receiver-email="@Model.Owner.Email">
                            Message Owner
                        </button>
                    }
                    else if (currentUserId == Model.OwnerId)
                    {
                        <p class="text-muted">This is your own listing.</p>
                    }
                    else
                    {
                        <p><a asp-area="Identity" asp-page="/Account/Login">Login</a> to make a request.</p>
                    }
                }
                else
                {
                    <p class="text-danger fw-bold">This item is no longer available.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="mt-4">
    @if (User.Identity.IsAuthenticated && currentUserId == Model.OwnerId)
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Edit</a>
    }
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<div class="modal fade" id="chatModal" tabindex="-1" aria-labelledby="chatModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="chatModalLabel">Chat with User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul id="messagesList" class="list-unstyled" style="max-height: 300px; overflow-y: auto;"></ul>
            </div>
            <div class="modal-footer">
                <div class="input-group">
                    <input type="text" id="messageInput" class="form-control" placeholder="Type a message..." />
                    <button type="button" id="sendButton" class="btn btn-primary">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
            let receiverId = '';
            const currentUserId = "@currentUserId";

            $("#sendButton").prop('disabled', true);

            connection.on("ReceiveMessage", function (senderId, messageContent) {
                const li = $('<li></li>');
                if (senderId === currentUserId) {
                    li.addClass('text-end fw-bold');
                    li.text(`You: ${messageContent}`);
                } else {
                    li.text(`Them: ${messageContent}`);
                }
                $("#messagesList").append(li);
            });

            $('#chatModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                receiverId = button.data('receiver-id');
                const receiverEmail = button.data('receiver-email');
                $('#chatModalLabel').text('Chat with ' + receiverEmail);

                connection.start().then(function () {
                    $("#sendButton").prop('disabled', false);
                }).catch(function (err) {
                    return console.error(err.toString());
                });
            });

            $('#chatModal').on('hidden.bs.modal', function () {
                connection.stop();
                $("#messagesList").empty();
                $("#sendButton").prop('disabled', true);
            });

            $("#sendButton").click(function (event) {
                const message = $("#messageInput").val();
                if (message && receiverId) {
                    connection.invoke("SendMessage", receiverId, message).catch(function (err) {
                        return console.error(err.toString());
                    });
                    $("#messageInput").val('').focus();
                }
                event.preventDefault();
            });
        });
    </script>
}